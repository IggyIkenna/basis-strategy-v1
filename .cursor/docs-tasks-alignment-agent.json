{
  "agent_name": "Docs-Tasks Alignment Agent",
  "background_mode": true,
  "web_browser_mode": true,
  "focus_areas": [
    "docs/",
    "docs/specs/",
    ".cursor/tasks/"
  ],
  "context_files": [
    "docs/REFERENCE_ARCHITECTURE_CANONICAL.md",
    "docs/REFERENCE_ARCHITECTURE_CANONICAL.md",
    "docs/VENUE_ARCHITECTURE.md",
    "docs/WORKFLOW_GUIDE.md",
    "docs/DEPLOYMENT_GUIDE.md",
    "docs/ENVIRONMENT_VARIABLES.md",
    "docs/QUALITY_GATES.md",
    "docs/COMPONENT_SPECS_INDEX.md",
    "docs/API_DOCUMENTATION.md",
    "docs/USER_GUIDE.md",
    "docs/MODES.md",
    "docs/GETTING_STARTED.md",
    "docs/INDEX.md",
    "docs/README.md",
    "docs/specs/",
    ".cursor/tasks/",
    ".cursor/rules.json"
  ],
  "primary_mission": "Ensure complete alignment between documentation and tasks - docs reflect task status, tasks are comprehensive, no conflicts exist",
  "validation_capabilities": [
    "Docs → Tasks validation: Check if docs mention pending work that has no corresponding task",
    "Verify implementation status sections reference relevant tasks",
    "Ensure quality gate requirements in docs match task requirements",
    "Validate architectural decisions have corresponding compliance tasks",
    "Tasks → Docs validation: Verify each task references relevant documentation",
    "Check if tasks conflict with documented architecture/principles",
    "Ensure task requirements match doc specifications",
    "Validate task completion criteria align with doc success criteria",
    "Task completeness: Check if refactoring needs in docs have comprehensive tasks",
    "Verify each architecture violation has a task",
    "Ensure each TODO in implementation status has task coverage",
    "Validate missing features in docs have corresponding tasks",
    "Conflict detection: Find tasks that contradict documented principles",
    "Identify tasks with outdated references to moved/renamed docs",
    "Detect tasks requiring features not documented in specs",
    "Flag tasks with success criteria different from doc criteria"
  ],
  "bidirectional_validation": [
    "Docs → Tasks: Pending work in docs must have corresponding tasks",
    "Tasks → Docs: Each task must reference relevant documentation",
    "Implementation status sections must reference relevant tasks",
    "Quality gate requirements must match between docs and tasks",
    "Architectural decisions must have corresponding compliance tasks",
    "Task requirements must match doc specifications",
    "Task completion criteria must align with doc success criteria"
  ],
  "conflict_detection": [
    "Find tasks that contradict documented principles",
    "Identify tasks with outdated references to moved/renamed docs",
    "Detect tasks requiring features not documented in specs",
    "Flag tasks with success criteria different from doc criteria",
    "Check for tasks that violate architectural principles",
    "Validate task priorities align with documented priorities",
    "Ensure task scope matches documented component scope"
  ],
  "canonical_source_logic": [
    "Docs win for: Architecture principles, component specs, API definitions",
    "Tasks win for: Implementation priorities, refactoring approach, tactical decisions",
    "Resolution: Update the non-canonical source to match canonical",
    "Architecture violations: Always defer to REFERENCE_ARCHITECTURE_CANONICAL.md",
    "Component specifications: Always defer to docs/specs/ files",
    "Implementation approach: Tasks can override doc approach if justified",
    "Quality gate criteria: Docs define standards, tasks define validation approach"
  ],
  "task_completeness_validation": [
    "Check if refactoring needs in docs have comprehensive tasks",
    "Verify each architecture violation has a task",
    "Ensure each TODO in implementation status has task coverage",
    "Validate missing features in docs have corresponding tasks",
    "Check if quality gate failures have corresponding tasks",
    "Verify each component with implementation issues has tasks",
    "Ensure each documented refactor requirement has task coverage"
  ],
  "report_generation": [
    "Output format: DOCS_TASKS_ALIGNMENT_REPORT_[timestamp].md",
    "Executive summary with total docs/tasks analyzed and alignment score",
    "Docs missing task coverage with specific pending work identified",
    "Tasks missing doc references with required documentation listed",
    "Task-doc conflicts with exact quotes and resolution guidance",
    "Task completeness issues with gaps and required tasks identified",
    "Prioritized recommendations for achieving full alignment"
  ],
  "validation_requirements": [
    "All docs with pending work have corresponding tasks",
    "All tasks reference relevant documentation",
    "No conflicts between task requirements and doc specs",
    "Task completeness validated for all refactor areas",
    "Implementation status sections properly reference tasks",
    "Quality gate requirements aligned between docs and tasks",
    "Architectural decisions have corresponding compliance tasks",
    "All TODO items in docs have task coverage"
  ],
  "output_format": "Comprehensive docs-tasks alignment report with specific conflicts, gaps, and resolution recommendations",
  "success_criteria": "Complete alignment between documentation and tasks with no conflicts and comprehensive task coverage for all pending work"
}
