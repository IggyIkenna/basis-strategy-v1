{
  "agent_name": "Docs Logical Inconsistency Detection Agent",
  "background_mode": true,
  "web_browser_mode": true,
  "focus_areas": [
    "docs/",
    "docs/specs/",
    ".cursor/tasks/"
  ],
  "context_files": [
    "docs/REFERENCE_ARCHITECTURE_CANONICAL.md",
    "docs/REFERENCE_ARCHITECTURE_CANONICAL.md",
    "docs/VENUE_ARCHITECTURE.md",
    "docs/WORKFLOW_GUIDE.md",
    "docs/DEPLOYMENT_GUIDE.md",
    "docs/ENVIRONMENT_VARIABLES.md",
    "docs/QUALITY_GATES.md",
    "docs/COMPONENT_SPECS_INDEX.md",
    "docs/API_DOCUMENTATION.md",
    "docs/USER_GUIDE.md",
    "docs/MODES.md",
    "docs/GETTING_STARTED.md",
    "docs/INDEX.md",
    "docs/README.md",
    "docs/specs/",
    ".cursor/tasks/",
    ".cursor/rules.json"
  ],
  "primary_mission": "Identify logical inconsistencies across all documentation through exhaustive cross-referencing of every doc to every other doc",
  "inconsistency_detection": [
    "Semantic analysis of same concepts with different descriptions",
    "Contradictory architectural principles detection",
    "Conflicting configuration requirements identification",
    "Opposing API specifications detection",
    "Incompatible quality gate criteria identification",
    "Inconsistent terminology for same concepts",
    "Different data structure definitions",
    "Conflicting component responsibilities",
    "Divergent workflow descriptions",
    "Mismatched testing requirements"
  ],
  "cross_referencing_strategy": [
    "Load all docs in memory (docs/*.md + docs/specs/*.md = ~35 files)",
    "For each doc pair (A, B): extract key concepts, terms, principles",
    "Compare statements about same concepts using semantic similarity",
    "Detect contradictions and flag structural inconsistencies",
    "Generate conflict matrix showing all relationships",
    "Prioritize by canonical source hierarchy"
  ],
  "canonical_source_hierarchy": [
    "REFERENCE_ARCHITECTURE_CANONICAL.md (highest priority)",
    "REFERENCE_ARCHITECTURE_CANONICAL.md",
    "VENUE_ARCHITECTURE.md",
    "Component specs (docs/specs/)",
    "Guide docs (WORKFLOW_GUIDE.md, USER_GUIDE.md, etc.)",
    "Task files (.cursor/tasks/)"
  ],
  "report_generation": [
    "Output format: DOCS_LOGICAL_INCONSISTENCY_REPORT_[timestamp].md",
    "Executive summary with total docs analyzed and consistency score",
    "Critical inconsistencies with exact line references",
    "Conflict type classification (Semantic/Structural)",
    "Canonical source identification for each conflict",
    "Prescribed resolution with priority to canonical sources",
    "Cross-reference matrix showing all doc pairs checked",
    "Severity classification (CRITICAL/HIGH/MEDIUM/LOW)"
  ],
  "prescriptive_resolution": [
    "Always prioritize canonical sources as correct",
    "Suggest updating non-canonical to match canonical",
    "Provide exact line references for changes",
    "Include severity assessment for each conflict",
    "Suggest consolidation where duplicate information exists",
    "Generate actionable resolution steps for each inconsistency"
  ],
  "validation_requirements": [
    "All 35 docs cross-referenced against each other",
    "Report generated with all inconsistencies found",
    "Each conflict has prescriptive resolution",
    "Canonical sources properly prioritized",
    "Matrix shows complete coverage of all doc pairs",
    "Severity levels assigned based on impact",
    "Exact line references provided for all conflicts",
    "Resolution steps are specific and actionable"
  ],
  "output_format": "Comprehensive logical inconsistency report with prescriptive resolutions and cross-reference matrix",
  "success_criteria": "Complete logical inconsistency analysis with prescriptive resolution for every conflict found across all documentation"
}
