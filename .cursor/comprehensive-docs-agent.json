{
  "agent_name": "Comprehensive Documentation Agent",
  "background_mode": true,
  "web_browser_mode": true,
  "focus_areas": [
    "docs/",
    "docs/specs/",
    "configs/",
    "backend/src/basis_strategy_v1/",
    ".cursor/tasks/"
  ],
  "context_files": [
    "docs/INTEGRATION_ALIGNMENT_REPORT.md",
    "docs/REFERENCE_ARCHITECTURE_CANONICAL.md",
    "docs/API_DOCUMENTATION.md",
    "docs/WORKFLOW_GUIDE.md",
    "docs/specs/CONFIGURATION.md",
    "docs/ENVIRONMENT_VARIABLES.md",
    "docs/QUALITY_GATES.md",
    "docs/COMPONENT_SPECS_INDEX.md",
    "docs/specs/",
    "configs/modes/",
    "configs/venues/",
    "configs/share_classes/",
    ".cursor/tasks/00_master_task_sequence.md",
    ".cursor/rules.json"
  ],
  "primary_mission": "Ensure 100% comprehensive documentation alignment across all aspects: consistency, integration, configuration, API, and architectural principles",
  "comprehensive_checks": [
    "Documentation consistency validation",
    "Integration alignment verification",
    "Component-to-component workflow alignment",
    "Function call and method signature alignment",
    "Links and cross-reference validation",
    "Mode-specific behavior documentation",
    "Configuration and environment variable alignment",
    "API documentation integration",
    "Canonical architecture compliance",
    "Cross-reference standardization",
    "Broken link detection and repair",
    "File path existence verification",
    "Content similarity analysis for redirects",
    "Architecture principles alignment",
    "Component specifications consistency",
    "Configuration requirements alignment",
    "Quality gate standards consistency",
    "Task sequence alignment",
    "Environment variable documentation",
    "API documentation accuracy",
    "Deployment guide accuracy",
    "Architecture compliance code scanning",
    "Code-docs deviation detection",
    "Quality gate coverage validation",
    "DRY compliance in quality gates"
  ],
  "validation_requirements": [
    "Zero conflicting statements between docs/ files",
    "All cross-references must be valid and comprehensive",
    "All file paths must exist",
    "All configuration examples must be accurate",
    "All API endpoints must be documented correctly",
    "All component specifications must align with implementation",
    "All broken links must be identified and redirected to closest relevant content",
    "All file references must point to existing files",
    "All section references must be valid",
    "All architectural principles must be consistently applied",
    "All component specs must have comprehensive cross-references",
    "All component specs must document configuration parameters",
    "All component specs must reference environment variables",
    "All component specs must integrate with API documentation",
    "All component specs must align with canonical architecture",
    "All configuration references must match YAML configs",
    "All environment variable usage must be documented",
    "All API endpoints must be referenced in component specs",
    "All workflow patterns must be consistent",
    "All method signatures must follow canonical patterns",
    "All component-to-component workflows must be aligned",
    "All function call and method signatures must be aligned",
    "All links and cross-references must be complete",
    "All mode-specific behavior must be documented",
    "All configuration and environment variables must be aligned",
    "All API documentation must be integrated",
    "All canonical architecture compliance must be verified",
    "All cross-references must be standardized",
    "All code-docs deviations must be identified and documented",
    "All architectural violations must have quality gate coverage",
    "All quality gates must comply with DRY principles"
  ],
  "output_format": "Comprehensive documentation alignment report with specific issues identified and resolution recommendations",
  "success_criteria": "100% comprehensive documentation alignment across all aspects: consistency, integration, configuration, API, and architectural principles"
}
